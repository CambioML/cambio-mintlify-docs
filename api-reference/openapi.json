{
  "openapi": "3.0.1",
  "info": {
    "title": "AnyParser RT API",
    "description": "A real-time parser designed to extract content from various file formats, including PDFs and DOCX files.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://public-api.cambio-ai.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/extract": {
      "post": {
        "summary": "Parse a file and return content in markdown format",
        "description": "This API endpoint parses the uploaded file and returns the content in markdown format.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_content": {
                    "type": "string",
                    "description": "The base64 encoded content of the file to be parsed."
                  },
                  "file_type": {
                    "type": "string",
                    "description": "The type of the file. Supported values are 'pdf' and 'docx'.",
                    "enum": ["pdf", "docx"]
                  }
                },
                "required": ["file_content", "file_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File parsed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "markdown": {
                      "type": "object",
                      "description": "The parsed content in markdown format."
                    },
                    "pageCount": {
                      "type": "integer",
                      "description": "The number of pages in the result."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded. Only 1 request per second is allowed."
          }
        },
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Your API key."
          }
        ]
      }
    },
    "/query": {
      "get": {
        "summary": "Query the status of the API",
        "description": "This endpoint queries the status, such as remaining pages.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Your API key."
          }
        ],
        "responses": {
          "200": {
            "description": "Query status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pageRemaining": {
                      "type": "string",
                      "description": "Number of pages remaining."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded. Only 1 request per second is allowed."
          }
        }
      }
    },
    "/async/upload": {
      "post": {
        "summary": "Upload a file asynchronously",
        "description": "This endpoint provides a pre-signed URL for uploading a file and a unique file ID.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File upload details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file_id": {
                      "type": "string",
                      "description": "The unique identifier of the file."
                    },
                    "presignedUrl": {
                      "type": "string",
                      "description": "A pre-signed URL for uploading your docx or pdf file."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded. Only 1 request per second is allowed."
          }
        },
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Your API key."
          }
        ]
      }
    },
    "/async/fetch": {
      "post": {
        "summary": "Fetch parsed content or status",
        "description": "This endpoint fetches the parsed content or status of a previously uploaded file.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_id": {
                    "type": "string",
                    "description": "The unique identifier of the file you want to check."
                  }
                },
                "required": ["file_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File parsed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "markdown": {
                      "type": "object",
                      "description": "The parsed content in markdown format."
                    },
                    "pageCount": {
                      "type": "integer",
                      "description": "The number of pages in the result."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "File processing in progress",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indicating that the file processing is still in progress."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indicating unauthorized access."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indicating that the file was not found."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Description of the client error encountered."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Detailed server error message."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Your API key."
          }
        ]
      }
    }
  }
}
